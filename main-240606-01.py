# 리스트(list) 자료형

odd = [1, 3, 5 ,7 ,9]

# 리스트의 선언 형태

a = [] # 빈(비어있는, 값이 없는) 리스트 선언
b = [1, 2, 3] # 정수를 값으로 가지는 리스트 선언
c = ['Life', 'is', 'too', 'short'] # 문자열을 값으로 가지는 리스트 선언
d = [1, 2, 'Life', 'is'] 
e = [1, 2, ['Life', 'is']] # 중첩 리스트

# 리스트도 문자열 처럼 인덱싱과 슬라이싱 가능하다

# 리스트의 인덱싱

a = [1, 2, 3,]
print(a[0]) # a 리스트의 첫번째 요소 값 : 1
print(a[1]) # a 리스트의 두번째 요소 값 : 2
print(a[2]) # a 리스트의 세번째 요소 값 : 3

print(a[0] + a[2]) # 1 + 3 = 4

print(a[-1]) # -로 인덱스를 주면 뒤에서 부터 시작 -1, -2 , -3
# print(a[3]) # error가 발생한다

a = [1, 2, 3, ['a', 'b', 'c']]

print(a[0])
print(a[-1])
print(a[3])

print(a[-1][0]) # 'a'
print(a[-1][2]) # 'c'

a =[1, 2, ['a', 'b', ['Life', 'is']]]

print(a[2][2][0])  # 'life'
print(a[2][2][1])  # 'is'
print(a[2][1])  # 'b'

# 리스트의 슬라이싱 : 원래의 리스트에서 일부분만 새로운 리스트를 생성한다.

a = [1, 2, 3, 4, 5]
reslut = a[0:2]
print(reslut)

reslut = a[:3] # 시작 인덱스를 생략 : 처음부터
print(reslut)

reslut = a[2:] # 끝 인덱스를 생략 : 끝까지
print(reslut)

# 중첩 리스트에서 슬라이싱하기

a = [1, 2, 3, ['a', 'b', 'c'], 4, 5]

reslut =a[2:5]
print(reslut)

reslut =a[3][1:]
print(reslut)

# 리스트 슬라이싱에서 step 사용하기

# 리스트[시작인덱스:끝인덱스:step]

a = ['a', 'b', 'c', 'd', 'e']

# 2칸씩 띄어서 값을 가져오기.

print(a[::2])
print(a[::3])

a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
print(a[5:1:-1])
print(a[::-1])




















































